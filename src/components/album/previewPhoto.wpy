<template>
<!-- 预览图片 -->
<view class="c-main-swiper-wrap">
  <!-- <swiper class="c-main-swiper" bindchange="swiperChange" current="{{photoItemIdx}}" data-idx="{{photoItemIdx}}" @tap.stop="clearSwiper"> -->
  <swiper class="c-main-swiper" bindchange="swiperChange" current="0" data-idx="0" @tap.stop="clearSwiper">
    <swiper-item bindtap="closeSwiper" wx:for="{{previewPhotos}}" wx:for-index="idx" wx:for-item="item" wx:key="{{idx}}">
      <view class="slide-image" style="background-image:url({{item.url}})"></view>
    </swiper-item>
</swiper>
  <view class="swiper-index" wx:if="{{previewPhotos.length >0}}">{{photoItemIdx + 1}}/{{previewPhotos.length}}</view>
 <view class="swiper-down iconfont icon-xiazai" @tap.stop="downImage"></view>
</view>
</template>
<style type="less">
.c-main-swiper-wrap {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  background-color: #666;
}
.swiper-index {
  position: absolute;
  top: 56rpx;
  left: 0;
  width: 100%;
  font-size: 40rpx;
  color: #fff;
  text-align: center;
}
.swiper-down {
  position: absolute;
  bottom: 34rpx;
  right: 34rpx;
  font-size: 80rpx;
  color: #1f1f1f;
  background-color: #fff;
  background-position: center;
  background-size: 30rpx 30rpx;
  background: -webkit-radial-gradient(
    rgba(255, 255, 255, 1) 40%,
    rgba(255, 255, 255, 0) 50%
  );
}
.c-main-swiper {
  width: 100%;
  height: 100%;
  /* background-color: #000; */
  swiper-item .slide-image {
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
  }
}
</style>
<script>
import wepy from 'wepy';
import { downInternetUrl } from '../../utils/api.js';
import LoadingMixin from '@/mixins/loadingMixin';
export default class PreviewPhoto extends wepy.component {
  props = {
    previewPhotos: Array,
    photoIdx: Number
  };
  mixins = [LoadingMixin];
  data = {
    photoItemIdx: 0
  };
  methods = {
    swiperChange(e) {
      this.photoItemIdx = e.detail.current
      this.$apply()
    },
    async downImage() {
      this.loadingIn('正在下载')
      try {
        await downInternetUrl(this.photos[this.photoItemIdx].url)
        this.loadingOut()
        this.toastSucc('下载成功')
      } catch (e) {
        this.loadingOut()
        this.toastFail('下载失败')
      }
    },
    clearSwiper() {
      this.photoItemIdx = 0
      this.$emit('clearCurPhotos')
    }
  };
  // watch = {
  //   photoIdx(newValue, oldValue) {
  //     console.log(newValue)
  //     this.photoItemIdx = newValue
  //     this.$apply()
  //   },
  //   photos(newValue) {
  //     console.log('change value')
  //     console.log(newValue)
  //   }
  // };
}
</script>
