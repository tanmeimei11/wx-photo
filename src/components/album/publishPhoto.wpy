<template>
<view class="c-publish-photo">
  <view class="s-side-btn" @tap.stop="editAlbum">
    <view class="iconfont icon-xiugaimingcheng"></view>
    编辑相册
  </view>
  <!-- <view class="s-publish-btn" @tap.stop="chooseImage"> -->
  <view class="s-publish-btn" @tap.stop="chooseType">
    上传照片/视频
  </view>
  <view class="s-side-btn" @tap.stop="backToIndex">
     <view class="iconfont icon-quanbuxiangce"></view>
    全部相册
  </view>
  <view class="publish-info" wx:if="{{publishToastInfo && publishToastInfo.is_show}}" @tap.atop="readTips">
    <view class="s-avatar-wrap">
      <view class="s-avatar">
        <image src="{{publishToastInfo.avatar}}"></image>
        <view class="s-avatar-qun"></view>
      </view>
      <view class="s-name">
        {{publishToastInfo.inviter_name}} 
      </view>
      <view class="s-name">
       {{publishToastInfo.invite_action}}
      </view>
    </view>
   
     <view class="s-text">
       {{publishToastInfo.txt}}
    </view>
  </view>
</view>
  
</template>
<style  type="less">
.c-publish-photo {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 10;
  width: 750rpx;
  height: 128rpx;
  box-sizing: border-box;
  padding: 20rpx 0rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  .s-publish-btn {
    height: 100%;
    width: 482rpx;
    background-image: linear-gradient(-90deg, #fd823e 0%, #faa84b 100%);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 32rpx;
    color: #fff;
  }
  .s-side-btn {
    height: 100%;
    width: 130rpx;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 20rpx;
    color: #666666;
    padding-top: 8rpx;
    .iconfont {
      margin-bottom: 12rpx;
    }
  }
  .publish-info {
    width: 484rpx;
    height: 255rpx;
    overflow: hidden;
    position: absolute;
    top: -246rpx;
    right: 105rpx;
    background: url("http://inimg02.jiuyan.info/in/2018/01/08/1A424013-5A89-71C3-E246-E87841C1F119.png")
      no-repeat;
    background-size: 484rpx 225rpx;
    background-position: center bottom;
    color: #333;
    font-size: 28rpx;
    padding: 0 30rpx;
    box-sizing: border-box;

    .s-avatar-wrap {
      display: flex;
      flex-direction: row;
      align-items: flex-end;
      justify-content: flex-start;
      margin-top: 20rpx;
      font-size: 24rpx;
      color: #666666;
    }
    .s-avatar-qun {
      position: absolute;
      bottom: 0;
      right: 0;
      width: 26rpx;
      height: 26rpx;
      background: url("http://inimg07.jiuyan.info/in/2018/01/08/8E5D491B-F8ED-4E63-DCFE-3BA0CAA5D9C2.png")
        no-repeat;
      background-size: contain;
      background-position: center;
    }
    .s-avatar + .s-name {
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 170rpx;
      margin-left: 0rpx;
    }
    .s-name {
      height: 60rpx;
      white-space: nowrap;
      line-height: 60rpx;
      margin-left: 10rpx;
    }
    .s-avatar {
      margin-right: 20px;
      margin-left: 10rpx;
      position: relative;
      width: 90rpx;
      height: 90rpx;
      border: 1rpx solid #efefef;
      border-radius: 50%;

      image {
        width: 100%;
        height: 100%;
        border-radius: 50%;
      }
    }
    .s-text {
      margin: 10px 0 0 10rpx;
    }
  }
}
</style>
<script>
import wepy from "wepy";
import { uploadImageToQiniu } from "../../utils/api.js";
import { request } from "../../utils/login.js";
import LoadingMixin from "@/mixins/loadingMixin";
export default class PublishPhoto extends wepy.component {
  props = {
    galleryAuth: Number,
    galleryId: String,
    groupId: String,
    groupUserName: String,
    publishToastInfo: {
      type: Object,
      twoWay: true
    }
  };
  // 混合
  mixins = [LoadingMixin];
  data = {
    images: [],
    video: {}
  };
  methods = {
    chooseType: async function() {
      if (this.galleryAuth < 2) {
        wepy.showModal({
          title: "权限提醒",
          content: "只有本群成员才能上传视频"
        });
        return;
      }
      await this.readTipsFun();
      var res = await wepy.showActionSheet({
        itemList: ["照片", "视频"]
      });
      if (res.tapIndex === 0) {
        await this.chooseImage();
      } else if (res.tapIndex === 1) {
        await this.chooseVideo();
      }
    },
    readTips: async function() {
      await this.readTipsFun();
    },
    editAlbum: async function() {
      var res = await wepy.showActionSheet({
        itemList: ["修改相册名", "删除相册"]
      });
      if (res.tapIndex === 0) {
        await this.openNewAlbum();
      } else {
        this.$emit("delalbum");
      }
    },
    backToIndex() {
      var pages = getCurrentPages().length;
      if (pages > 2) {
        wepy.navigateBack({
          delta: 1
        });
      } else {
        wepy.redirectTo({
          url: `/pages/gallery/gallery?id=${this.groupId}`
        });
      }
    }
  };
  event = {};
  openNewAlbum() {
    if (this.galleryAuth < 3) {
      wepy.showModal({
        title: "权限提醒",
        content: `只有群主${this.groupUserName}才能修改群信息`
      });
      return;
    }
    this.$emit("openNewAlbum");
  }
  async chooseVideo() {
    this.video = null;
    this.video = await wepy.chooseVideo({
      sourceType: ["album", "camera"],
      compressed: true,
      maxDuration: 60
    });

    try {
      this.loadingIn("正在上传");
      console.log("正在上传");
      var upRes = await uploadImageToQiniu(this.video.tempFilePath, "mp4");
      this.video = {
        ...this.video,
        ...upRes
      };
      await this.publish("video");
    } catch (e) {
      this.loadingOut();
      this.toastFail("上传失败");
      console.log(e);
    }
  }
  async chooseImage() {
    this.images = [];
    var chooseRes = await wepy.chooseImage({
      count: 9
    });
    var tempFilePaths = chooseRes.tempFilePaths;
    try {
      this.loadingIn("正在上传");
      await this.loadImages(tempFilePaths);
    } catch (e) {
      this.loadingOut();
      this.toastFail("上传失败");
    }
  }
  async readTipsFun() {
    var m = await request({
      url: "/gg/group/news_read",
      data: {
        gallery_id: this.galleryId
      }
    });
    if (m.succ) {
      this.publishToastInfo = false;
      this.$apply();
      // this.$emit("clearpublishToastInfo");
    }
  }
  async publishVideoFun() {
    try {
      var _data = {
        gallery_id: this.galleryId,
        video_url: this.video.key,
        video_duration: this.video.duration,
        video_hash: this.video.hash,
        video_width: this.video.width,
        video_height: this.video.height
      };
      var res = await request({
        url: "/gg/publish/video",
        method: "POST",
        header: {
          "content-type": "application/x-www-form-urlencoded"
        },
        data: _data
      });
      return res;
    } catch (e) {
      throw new Error();
    }
  }
  async publishImagesFun() {
    try {
      var res = await request({
        url: "/gg/publish/photo",
        method: "POST",
        header: {
          "content-type": "application/x-www-form-urlencoded"
        },
        data: {
          param: JSON.stringify(this.images),
          gallery_id: this.galleryId
        }
      });
      return res;
    } catch (e) {
      throw new Error();
    }
  }
  async publish(type) {
    this.loadingIn("正在发布");
    var res;
    if (type === "image") {
      res = await this.publishImagesFun();
    } else {
      res = await this.publishVideoFun();
    }
    wx.hideLoading();
    if (res.succ && res.data) {
      this.$emit("publishPhotoAndVideo", res.data);
    } else {
      this.toastFail("发布失败");
    }
  }

  async loadImages(files) {
    try {
      var _len = files.length;
      for (var i = 0; i < _len; i++) {
        var res = await uploadImageToQiniu(files[i]);
        this.images.push(res);
      }
      this.$apply();
      this.publish("image");
    } catch (e) {
      throw new Error();
    }
  }
}
</script>
